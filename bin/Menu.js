// Generated by CoffeeScript 1.6.3
/*
A simple DOM based menu for start a game and possibly selecting levels.
*/


(function() {
  window.Menu = (function() {
    function Menu(context) {
      this.context = context;
      this.menu_exists_in_dom = false;
    }

    Menu.prototype.tick = function(state_controls) {
      this.state_controls = state_controls;
      if (this.menu_exists_in_dom === false) {
        return this.createMenu();
      }
    };

    Menu.prototype.createMenu = function() {
      var i, item_info, menu_item, menu_items, self, _fn, _i, _len;
      self = this;
      menu_items = [
        {
          label: 'Start Game',
          method: 'startGame'
        }, {
          label: 'Read Instructions',
          method: 'showInstructions'
        }
      ];
      this.menu_element = $('<div/>', {
        'id': 'menu'
      });
      _fn = function(method) {
        return menu_item.click(function() {
          return self[method].call(self);
        });
      };
      for (i = _i = 0, _len = menu_items.length; _i < _len; i = ++_i) {
        item_info = menu_items[i];
        menu_item = $('<div/>', {
          'class': "menu-item menu-item-" + i
        }).text(item_info.label).click(function() {
          return console.log(item_info.method);
        }).appendTo(this.menu_element);
        _fn(item_info.method);
      }
      this.context.$body.append(this.menu_element);
      return this.menu_exists_in_dom = true;
    };

    Menu.prototype.destroyMenu = function() {
      this.menu_element.remove();
      return this.menu_exists_in_dom = false;
    };

    Menu.prototype.showInstructions = function() {
      return console.log('@notimplemented');
    };

    Menu.prototype.startGame = function() {
      this.destroyMenu();
      return this.state_controls(function(state, states) {
        return state.execute = states.IN_GAME;
      });
    };

    return Menu;

  })();

}).call(this);
