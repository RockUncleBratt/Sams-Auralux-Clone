// Generated by CoffeeScript 1.6.3
/*
Define a way to execute a function consistently at a specific framerate.
*/


(function() {
  window.Ticker = (function() {
    function Ticker(settings) {
      this.settings = _.extend({
        ticks_per_second: 30,
        tick_function: function() {}
      }, settings);
      this.target_tick_time = 1000 / this.settings.ticks_per_second;
      this.stopped = true;
      this.count = 0;
    }

    /*
    	Start a ticker at the desired speed.
    */


    Ticker.prototype.start = function() {
      var execute_tick, next_tick_ms, self;
      this.stopped = false;
      self = this;
      next_tick_ms = 0;
      execute_tick = function() {
        return setTimeout(function() {
          var end, start, tick_time;
          this.count++;
          start = self.milliseconds();
          self.settings.tick_function();
          end = self.milliseconds();
          tick_time = end - start;
          next_tick_ms = tick_time > self.target_tick_time ? 0 : self.target_tick_time - tick_time;
          if (tick_time > self.target_tick_time) {
            console.log('Ticker hitting performance limit.');
          }
          if (!self.stopped) {
            return execute_tick();
          }
        }, next_tick_ms);
      };
      return execute_tick();
    };

    Ticker.prototype.milliseconds = function() {
      return Date.now();
    };

    Ticker.prototype.stop = function() {
      return this.stopped = true;
    };

    Ticker.prototype.getTickCount = function() {
      return this.settings.count;
    };

    return Ticker;

  })();

}).call(this);
