// Generated by CoffeeScript 1.6.3
/*
Refactor this whole thing into a class and stop using statics.
*/


(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.CollisionsGrid = (function(_super) {
    __extends(CollisionsGrid, _super);

    function CollisionsGrid() {
      _ref = CollisionsGrid.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    CollisionsGrid.spacial_grid_items = [];

    CollisionsGrid.grid_size = 16;

    CollisionsGrid.reset = function() {
      return this.grid = {};
    };

    CollisionsGrid.insertUnitGroup = function(units) {
      var unit, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = units.length; _i < _len; _i++) {
        unit = units[_i];
        _results.push(CollisionsGrid.insertIntoGrid(unit));
      }
      return _results;
    };

    CollisionsGrid.insertIntoGrid = function(unit) {
      var cell, position;
      position = unit.getPosition();
      cell = Math.floor(position.getX() / this.grid_size) + 'x' + Math.floor(position.getY() / this.grid_size);
      this.grid[cell] = this.grid[cell] || [];
      return this.grid[cell].push(unit);
    };

    CollisionsGrid.checkGrid = function() {
      var cell, _results;
      _results = [];
      for (cell in this.grid) {
        _results.push(console.log(cell));
      }
      return _results;
    };

    CollisionsGrid.prototype.addItem = function(unit) {
      var position;
      this.unit = unit;
      return position = this.unit.getPosition();
    };

    return CollisionsGrid;

  })(Collisions);

}).call(this);
