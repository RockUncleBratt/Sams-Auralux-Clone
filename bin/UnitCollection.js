// Generated by CoffeeScript 1.6.3
/*
A way of storing collections of units. Prevents simple things like duplicate
units being added to the same collection.
*/


(function() {
  window.UnitCollection = (function() {
    UnitCollection.SEND_TO_SPREAD_AMOUNT = 20;

    function UnitCollection() {
      this.units = {};
    }

    UnitCollection.prototype.add = function(unit) {
      return this.units[this.getObjectKey(unit)] = unit;
    };

    UnitCollection.prototype.remove = function(unit) {
      return delete this.units[this.getObjectKey(unit)];
    };

    UnitCollection.prototype.getAll = function() {
      var unit_array;
      unit_array = [];
      $.each(this.units, function(i, unit) {
        return unit_array.push(unit);
      });
      return unit_array;
    };

    UnitCollection.prototype.getObjectKey = function(unit) {
      return "id-" + (unit.getId());
    };

    UnitCollection.prototype.clearAll = function() {
      var self;
      self = this;
      return $.each(this.getAll(), function(i, unit) {
        return self.remove(unit);
      });
    };

    UnitCollection.prototype.sendTo = function(position) {
      var self;
      position = position.clone();
      self = this;
      return $.each(this.getAll(), function(i, unit) {
        var move_to;
        move_to = position.clone();
        move_to.add(new Position(Random.integer(-UnitCollection.SEND_TO_SPREAD_AMOUNT, UnitCollection.SEND_TO_SPREAD_AMOUNT), Random.integer(-UnitCollection.SEND_TO_SPREAD_AMOUNT, UnitCollection.SEND_TO_SPREAD_AMOUNT)));
        return unit.setDestination(move_to);
      });
    };

    UnitCollection.prototype.tickAll = function() {
      return $.each(this.getAll(), function(i, unit) {
        return unit.tick();
      });
    };

    return UnitCollection;

  })();

}).call(this);
